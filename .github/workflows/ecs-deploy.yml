name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: 'AKIAYGKE73FVUU33ZUHC'
          aws-secret-access-key: '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'
          aws-region: us-east-1
      - name: Login to ECR
        run: |
          echo "$(aws ecr get-login-password --region us-east-1)" | docker login --username AWS --password-stdin 563322280299.dkr.ecr.us-east-1.amazonaws.com


      - name: Build and push Docker image
        run: |
          docker build -t my-node-app .
          docker tag my-node-app:latest 563322280299.dkr.ecr.us-east-1.amazonaws.com/test-repo:latest
          docker push 563322280299.dkr.ecr.us-east-1.amazonaws.com/test-repo:latest

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster arn:aws:ecs:us-east-1:563322280299:cluster/devcluster --service arn:aws:ecs:us-east-1:563322280299:service/devcluster/task-service --force-new-deployment
      - name: Wait for deployment
        run: |
          aws ecs wait services-stable --cluster arn:aws:ecs:us-east-1:563322280299:cluster/devcluster --services arn:aws:ecs:us-east-1:563322280299:service/devcluster/task-service

      - name: Get service URL
        run: |
          export SERVICE_URL=$(aws ecs describe-services --cluster  arn:aws:ecs:us-east-1:563322280299:cluster/devcluster --services arn:aws:ecs:us-east-1:563322280299:service/devcluster/task-service --query 'services[0].networkConfiguration.loadBalancers[0].loadBalancerName' --output text)
          echo "Service URL: http://${SERVICE_URL}"